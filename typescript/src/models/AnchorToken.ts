/* tslint:disable */
/* eslint-disable */
/**
 * Yago API
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Custom JWT Token for Google Cloud Anchor API.
 * @export
 * @interface AnchorToken
 */
export interface AnchorToken {
    /**
     *
     * @type {string}
     * @memberof AnchorToken
     */
    iss: string;
    /**
     *
     * @type {string}
     * @memberof AnchorToken
     */
    sub: string;
    /**
     *
     * @type {number}
     * @memberof AnchorToken
     */
    iat: number;
    /**
     *
     * @type {number}
     * @memberof AnchorToken
     */
    exp: number;
    /**
     *
     * @type {string}
     * @memberof AnchorToken
     */
    aud: string;
    /**
     *
     * @type {string}
     * @memberof AnchorToken
     */
    uid: string;
}

/**
 * Check if a given object implements the AnchorToken interface.
 */
export function instanceOfAnchorToken(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'iss' in value;
    isInstance = isInstance && 'sub' in value;
    isInstance = isInstance && 'iat' in value;
    isInstance = isInstance && 'exp' in value;
    isInstance = isInstance && 'aud' in value;
    isInstance = isInstance && 'uid' in value;

    return isInstance;
}

export function AnchorTokenFromJSON(json: any): AnchorToken {
    return AnchorTokenFromJSONTyped(json, false);
}

export function AnchorTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnchorToken {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        iss: json['iss'],
        sub: json['sub'],
        iat: json['iat'],
        exp: json['exp'],
        aud: json['aud'],
        uid: json['uid'],
    };
}

export function AnchorTokenToJSON(value?: AnchorToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        iss: value.iss,
        sub: value.sub,
        iat: value.iat,
        exp: value.exp,
        aud: value.aud,
        uid: value.uid,
    };
}

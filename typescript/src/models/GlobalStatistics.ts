/* tslint:disable */
/* eslint-disable */
/**
 * Genie API
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FilterEventsEnum,
    FilterEventsEnumFromJSON,
    FilterEventsEnumFromJSONTyped,
    FilterEventsEnumToJSON,
} from './FilterEventsEnum';
import {
    GlobalStatisticsGroupByEnum,
    GlobalStatisticsGroupByEnumFromJSON,
    GlobalStatisticsGroupByEnumFromJSONTyped,
    GlobalStatisticsGroupByEnumToJSON,
} from './GlobalStatisticsGroupByEnum';
import {
    ReportFormatEnum,
    ReportFormatEnumFromJSON,
    ReportFormatEnumFromJSONTyped,
    ReportFormatEnumToJSON,
} from './ReportFormatEnum';
import {
    TimeRangeEnum,
    TimeRangeEnumFromJSON,
    TimeRangeEnumFromJSONTyped,
    TimeRangeEnumToJSON,
} from './TimeRangeEnum';

/**
 * 
 * @export
 * @interface GlobalStatistics
 */
export interface GlobalStatistics {
    /**
     * 
     * @type {ReportFormatEnum}
     * @memberof GlobalStatistics
     */
    reportFormat: ReportFormatEnum;
    /**
     * 
     * @type {TimeRangeEnum}
     * @memberof GlobalStatistics
     */
    timeRange: TimeRangeEnum;
    /**
     * 
     * @type {FilterEventsEnum}
     * @memberof GlobalStatistics
     */
    filterEvents: FilterEventsEnum;
    /**
     * 
     * @type {string}
     * @memberof GlobalStatistics
     */
    filterProject?: string;
    /**
     * 
     * @type {GlobalStatisticsGroupByEnum}
     * @memberof GlobalStatistics
     */
    groupBy: GlobalStatisticsGroupByEnum;
}

export function GlobalStatisticsFromJSON(json: any): GlobalStatistics {
    return GlobalStatisticsFromJSONTyped(json, false);
}

export function GlobalStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalStatistics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reportFormat': ReportFormatEnumFromJSON(json['report_format']),
        'timeRange': TimeRangeEnumFromJSON(json['time_range']),
        'filterEvents': FilterEventsEnumFromJSON(json['filter_events']),
        'filterProject': !exists(json, 'filter_project') ? undefined : json['filter_project'],
        'groupBy': GlobalStatisticsGroupByEnumFromJSON(json['group_by']),
    };
}

export function GlobalStatisticsToJSON(value?: GlobalStatistics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'report_format': ReportFormatEnumToJSON(value.reportFormat),
        'time_range': TimeRangeEnumToJSON(value.timeRange),
        'filter_events': FilterEventsEnumToJSON(value.filterEvents),
        'filter_project': value.filterProject,
        'group_by': GlobalStatisticsGroupByEnumToJSON(value.groupBy),
    };
}


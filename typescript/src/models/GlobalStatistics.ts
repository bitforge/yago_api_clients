/* tslint:disable */
/* eslint-disable */
/**
 * Yago API
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FilterEventsEnum } from './FilterEventsEnum';
import { FilterEventsEnumFromJSON, FilterEventsEnumFromJSONTyped, FilterEventsEnumToJSON } from './FilterEventsEnum';
import type { GlobalStatisticsGroupByEnum } from './GlobalStatisticsGroupByEnum';
import {
    GlobalStatisticsGroupByEnumFromJSON,
    GlobalStatisticsGroupByEnumFromJSONTyped,
    GlobalStatisticsGroupByEnumToJSON,
} from './GlobalStatisticsGroupByEnum';
import type { TimeRangeEnum } from './TimeRangeEnum';
import { TimeRangeEnumFromJSON, TimeRangeEnumFromJSONTyped, TimeRangeEnumToJSON } from './TimeRangeEnum';

/**
 *
 * @export
 * @interface GlobalStatistics
 */
export interface GlobalStatistics {
    /**
     *
     * @type {TimeRangeEnum}
     * @memberof GlobalStatistics
     */
    timeRange: TimeRangeEnum;
    /**
     *
     * @type {FilterEventsEnum}
     * @memberof GlobalStatistics
     */
    filterEvents: FilterEventsEnum;
    /**
     *
     * @type {string}
     * @memberof GlobalStatistics
     */
    filterProject?: string;
    /**
     *
     * @type {GlobalStatisticsGroupByEnum}
     * @memberof GlobalStatistics
     */
    groupBy: GlobalStatisticsGroupByEnum;
}

/**
 * Check if a given object implements the GlobalStatistics interface.
 */
export function instanceOfGlobalStatistics(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && 'timeRange' in value;
    isInstance = isInstance && 'filterEvents' in value;
    isInstance = isInstance && 'groupBy' in value;

    return isInstance;
}

export function GlobalStatisticsFromJSON(json: any): GlobalStatistics {
    return GlobalStatisticsFromJSONTyped(json, false);
}

export function GlobalStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalStatistics {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        timeRange: TimeRangeEnumFromJSON(json['time_range']),
        filterEvents: FilterEventsEnumFromJSON(json['filter_events']),
        filterProject: !exists(json, 'filter_project') ? undefined : json['filter_project'],
        groupBy: GlobalStatisticsGroupByEnumFromJSON(json['group_by']),
    };
}

export function GlobalStatisticsToJSON(value?: GlobalStatistics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        time_range: TimeRangeEnumToJSON(value.timeRange),
        filter_events: FilterEventsEnumToJSON(value.filterEvents),
        filter_project: value.filterProject,
        group_by: GlobalStatisticsGroupByEnumToJSON(value.groupBy),
    };
}

/*
 * Genie API
 *
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Genie.Client;
using Genie.Api;
// uncomment below to import models
//using Genie.Model;

namespace Genie.Test.Api
{
    /// <summary>
    ///  Class for testing AuthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthApiTests : IDisposable
    {
        private AuthApi instance;

        public AuthApiTests()
        {
            instance = new AuthApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthApi
            //Assert.IsType<AuthApi>(instance);
        }

        /// <summary>
        /// Test AuthCreate
        /// </summary>
        [Fact]
        public void AuthCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenObtainRequest tokenObtainRequest = null;
            //var response = instance.AuthCreate(tokenObtainRequest);
            //Assert.IsType<TokenObtainResponse>(response);
        }

        /// <summary>
        /// Test AuthGoogleCreate
        /// </summary>
        [Fact]
        public void AuthGoogleCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GoogleIdToken googleIdToken = null;
            //var response = instance.AuthGoogleCreate(googleIdToken);
            //Assert.IsType<TokenObtainResponse>(response);
        }

        /// <summary>
        /// Test AuthPasswordResetConfirmCreate
        /// </summary>
        [Fact]
        public void AuthPasswordResetConfirmCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PasswordResetConfirm passwordResetConfirm = null;
            //var response = instance.AuthPasswordResetConfirmCreate(passwordResetConfirm);
            //Assert.IsType<PasswordResetConfirm>(response);
        }

        /// <summary>
        /// Test AuthPasswordResetCreate
        /// </summary>
        [Fact]
        public void AuthPasswordResetCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PasswordReset passwordReset = null;
            //var response = instance.AuthPasswordResetCreate(passwordReset);
            //Assert.IsType<PasswordReset>(response);
        }

        /// <summary>
        /// Test AuthRefreshCreate
        /// </summary>
        [Fact]
        public void AuthRefreshCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRefreshRequest tokenRefreshRequest = null;
            //var response = instance.AuthRefreshCreate(tokenRefreshRequest);
            //Assert.IsType<TokenRefreshResponse>(response);
        }

        /// <summary>
        /// Test AuthVerifyCreate
        /// </summary>
        [Fact]
        public void AuthVerifyCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenVerify tokenVerify = null;
            //instance.AuthVerifyCreate(tokenVerify);
        }
    }
}

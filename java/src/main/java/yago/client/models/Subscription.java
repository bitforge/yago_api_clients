/*
 * Genie API
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yago.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import yago.client.models.Nested;
import yago.client.models.PaymentMethodEnum;
import yago.client.models.StripeSubscription;

/**
 * Subscription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-21T17:02:29.236455048+01:00[Europe/Zurich]")
public class Subscription {
  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "payment_method";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private PaymentMethodEnum paymentMethod;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private Nested plan;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "billing_address";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private Nested billingAddress;

  public static final String SERIALIZED_NAME_STRIPE_SUBSCRIPTION = "stripe_subscription";
  @SerializedName(SERIALIZED_NAME_STRIPE_SUBSCRIPTION)
  private StripeSubscription stripeSubscription;

  public Subscription() { 
  }

  
  public Subscription(
     Nested plan, 
     Nested billingAddress
  ) {
    this();
    this.plan = plan;
    this.billingAddress = billingAddress;
  }

  public Subscription paymentMethod(PaymentMethodEnum paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentMethodEnum getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


   /**
   * Get plan
   * @return plan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Nested getPlan() {
    return plan;
  }




   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Nested getBillingAddress() {
    return billingAddress;
  }




  public Subscription stripeSubscription(StripeSubscription stripeSubscription) {
    
    this.stripeSubscription = stripeSubscription;
    return this;
  }

   /**
   * Get stripeSubscription
   * @return stripeSubscription
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public StripeSubscription getStripeSubscription() {
    return stripeSubscription;
  }


  public void setStripeSubscription(StripeSubscription stripeSubscription) {
    this.stripeSubscription = stripeSubscription;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subscription subscription = (Subscription) o;
    return Objects.equals(this.paymentMethod, subscription.paymentMethod) &&
        Objects.equals(this.plan, subscription.plan) &&
        Objects.equals(this.billingAddress, subscription.billingAddress) &&
        Objects.equals(this.stripeSubscription, subscription.stripeSubscription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethod, plan, billingAddress, stripeSubscription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subscription {\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    stripeSubscription: ").append(toIndentedString(stripeSubscription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Genie API
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yago.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * Project
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-21T17:02:29.236455048+01:00[Europe/Zurich]")
public class Project {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private URI image;

  public static final String SERIALIZED_NAME_IMAGE_THUMB = "image_thumb";
  @SerializedName(SERIALIZED_NAME_IMAGE_THUMB)
  private String imageThumb;

  public static final String SERIALIZED_NAME_IMAGE_PREVIEW = "image_preview";
  @SerializedName(SERIALIZED_NAME_IMAGE_PREVIEW)
  private String imagePreview;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private URI website;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GALLERY = "gallery";
  @SerializedName(SERIALIZED_NAME_GALLERY)
  private Boolean gallery;

  public static final String SERIALIZED_NAME_TRANSLATIONS_DE = "translations_de";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS_DE)
  private Boolean translationsDe;

  public static final String SERIALIZED_NAME_TRANSLATIONS_EN = "translations_en";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS_EN)
  private Boolean translationsEn;

  public static final String SERIALIZED_NAME_TRANSLATIONS_FR = "translations_fr";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS_FR)
  private Boolean translationsFr;

  public static final String SERIALIZED_NAME_TRANSLATIONS_IT = "translations_it";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS_IT)
  private Boolean translationsIt;

  public static final String SERIALIZED_NAME_BACKLINK_URLS = "backlink_urls";
  @SerializedName(SERIALIZED_NAME_BACKLINK_URLS)
  private Boolean backlinkUrls;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public Project() { 
  }

  
  public Project(
     UUID id, 
     String imageThumb, 
     String imagePreview, 
     OffsetDateTime created, 
     OffsetDateTime modified
  ) {
    this();
    this.id = id;
    this.imageThumb = imageThumb;
    this.imagePreview = imagePreview;
    this.created = created;
    this.modified = modified;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getId() {
    return id;
  }




  public Project name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name will be visible as title in gallery.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name will be visible as title in gallery.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Project slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Will be part of asset urls. Cannot be changed once created.
   * @return slug
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Will be part of asset urls. Cannot be changed once created.")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public Project image(URI image) {
    
    this.image = image;
    return this;
  }

   /**
   * Image will be visible in gallery.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Image will be visible in gallery.")

  public URI getImage() {
    return image;
  }


  public void setImage(URI image) {
    this.image = image;
  }


   /**
   * Get imageThumb
   * @return imageThumb
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getImageThumb() {
    return imageThumb;
  }




   /**
   * Get imagePreview
   * @return imagePreview
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getImagePreview() {
    return imagePreview;
  }




  public Project website(URI website) {
    
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public URI getWebsite() {
    return website;
  }


  public void setWebsite(URI website) {
    this.website = website;
  }


  public Project description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Project gallery(Boolean gallery) {
    
    this.gallery = gallery;
    return this;
  }

   /**
   * Activates a publicly available gallery with all project models in state READY or ONLINE.
   * @return gallery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Activates a publicly available gallery with all project models in state READY or ONLINE.")

  public Boolean getGallery() {
    return gallery;
  }


  public void setGallery(Boolean gallery) {
    this.gallery = gallery;
  }


  public Project translationsDe(Boolean translationsDe) {
    
    this.translationsDe = translationsDe;
    return this;
  }

   /**
   * Get translationsDe
   * @return translationsDe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTranslationsDe() {
    return translationsDe;
  }


  public void setTranslationsDe(Boolean translationsDe) {
    this.translationsDe = translationsDe;
  }


  public Project translationsEn(Boolean translationsEn) {
    
    this.translationsEn = translationsEn;
    return this;
  }

   /**
   * Get translationsEn
   * @return translationsEn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTranslationsEn() {
    return translationsEn;
  }


  public void setTranslationsEn(Boolean translationsEn) {
    this.translationsEn = translationsEn;
  }


  public Project translationsFr(Boolean translationsFr) {
    
    this.translationsFr = translationsFr;
    return this;
  }

   /**
   * Get translationsFr
   * @return translationsFr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTranslationsFr() {
    return translationsFr;
  }


  public void setTranslationsFr(Boolean translationsFr) {
    this.translationsFr = translationsFr;
  }


  public Project translationsIt(Boolean translationsIt) {
    
    this.translationsIt = translationsIt;
    return this;
  }

   /**
   * Get translationsIt
   * @return translationsIt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTranslationsIt() {
    return translationsIt;
  }


  public void setTranslationsIt(Boolean translationsIt) {
    this.translationsIt = translationsIt;
  }


  public Project backlinkUrls(Boolean backlinkUrls) {
    
    this.backlinkUrls = backlinkUrls;
    return this;
  }

   /**
   * Enable urls to the product on your site. Required when using standalone QR codes (e.g. Print).
   * @return backlinkUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable urls to the product on your site. Required when using standalone QR codes (e.g. Print).")

  public Boolean getBacklinkUrls() {
    return backlinkUrls;
  }


  public void setBacklinkUrls(Boolean backlinkUrls) {
    this.backlinkUrls = backlinkUrls;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get modified
   * @return modified
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getModified() {
    return modified;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.id, project.id) &&
        Objects.equals(this.name, project.name) &&
        Objects.equals(this.slug, project.slug) &&
        Objects.equals(this.image, project.image) &&
        Objects.equals(this.imageThumb, project.imageThumb) &&
        Objects.equals(this.imagePreview, project.imagePreview) &&
        Objects.equals(this.website, project.website) &&
        Objects.equals(this.description, project.description) &&
        Objects.equals(this.gallery, project.gallery) &&
        Objects.equals(this.translationsDe, project.translationsDe) &&
        Objects.equals(this.translationsEn, project.translationsEn) &&
        Objects.equals(this.translationsFr, project.translationsFr) &&
        Objects.equals(this.translationsIt, project.translationsIt) &&
        Objects.equals(this.backlinkUrls, project.backlinkUrls) &&
        Objects.equals(this.created, project.created) &&
        Objects.equals(this.modified, project.modified);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, slug, image, imageThumb, imagePreview, website, description, gallery, translationsDe, translationsEn, translationsFr, translationsIt, backlinkUrls, created, modified);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageThumb: ").append(toIndentedString(imageThumb)).append("\n");
    sb.append("    imagePreview: ").append(toIndentedString(imagePreview)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gallery: ").append(toIndentedString(gallery)).append("\n");
    sb.append("    translationsDe: ").append(toIndentedString(translationsDe)).append("\n");
    sb.append("    translationsEn: ").append(toIndentedString(translationsEn)).append("\n");
    sb.append("    translationsFr: ").append(toIndentedString(translationsFr)).append("\n");
    sb.append("    translationsIt: ").append(toIndentedString(translationsIt)).append("\n");
    sb.append("    backlinkUrls: ").append(toIndentedString(backlinkUrls)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


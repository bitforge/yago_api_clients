/*
 * Yago API
 * Augemented Reality Made Easy.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@genie-ar.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package yago.client.apis;

import yago.client.ApiException;
import java.io.File;
import yago.client.models.FileUpload;
import yago.client.models.Model;
import yago.client.models.ModelCreate;
import yago.client.models.ModelInfo;
import yago.client.models.ModelUpdate;
import yago.client.models.PatchedModelUpdate;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModelsApi
 */
@Ignore
public class ModelsApiTest {

    private final ModelsApi api = new ModelsApi();

    
    /**
     * 
     *
     * Add a new model. Change details and translations later via PUT or PATCH.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsCreateTest() throws ApiException {
        ModelCreate modelCreate = null;
                ModelCreate response = api.modelsCreate(modelCreate);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Remove a model. Be cautious, this is permanent!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Model infos for embedding. Loaded by &lt;ar-button&gt; web component.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsEmbedOptionsRetrieveTest() throws ApiException {
        String slug = null;
                ModelInfo response = api.modelsEmbedOptionsRetrieve(slug);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsGlbDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsGlbDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upload a file. Max size 30MB. Filename is required!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsGlbUpdateTest() throws ApiException {
        String contentDisposition = null;
        UUID id = null;
        File body = null;
                FileUpload response = api.modelsGlbUpdate(contentDisposition, id, body);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete an image.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsImageDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsImageDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upload an image. Max size 30MB. Filename is required!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsImageUpdateTest() throws ApiException {
        String contentDisposition = null;
        UUID id = null;
        File body = null;
                FileUpload response = api.modelsImageUpdate(contentDisposition, id, body);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Lists all models for all projects the user is a member of. Can be filtered by &#x60;project&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsListTest() throws ApiException {
        UUID project = null;
        String status = null;
                List<Model> response = api.modelsList(project, status);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsModelDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsModelDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upload a file. Max size 30MB. Filename is required!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsModelUpdateTest() throws ApiException {
        String contentDisposition = null;
        UUID id = null;
        File body = null;
                FileUpload response = api.modelsModelUpdate(contentDisposition, id, body);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Change as subset of model details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsPartialUpdateTest() throws ApiException {
        UUID id = null;
        PatchedModelUpdate patchedModelUpdate = null;
                ModelUpdate response = api.modelsPartialUpdate(id, patchedModelUpdate);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Details of a single model.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsRetrieveTest() throws ApiException {
        UUID id = null;
                Model response = api.modelsRetrieve(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUnityAndroidDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsUnityAndroidDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upload a file. Max size 30MB. Filename is required!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUnityAndroidUpdateTest() throws ApiException {
        String contentDisposition = null;
        UUID id = null;
        File body = null;
                FileUpload response = api.modelsUnityAndroidUpdate(contentDisposition, id, body);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUnityIosDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsUnityIosDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upload a file. Max size 30MB. Filename is required!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUnityIosUpdateTest() throws ApiException {
        String contentDisposition = null;
        UUID id = null;
        File body = null;
                FileUpload response = api.modelsUnityIosUpdate(contentDisposition, id, body);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Change model details. Translated field are all optional expcet for &#x60;name_de&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUpdateTest() throws ApiException {
        UUID id = null;
        ModelUpdate modelUpdate = null;
                ModelUpdate response = api.modelsUpdate(id, modelUpdate);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUsdzDestroyTest() throws ApiException {
        UUID id = null;
                api.modelsUsdzDestroy(id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Upload a file. Max size 30MB. Filename is required!
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modelsUsdzUpdateTest() throws ApiException {
        String contentDisposition = null;
        UUID id = null;
        File body = null;
                FileUpload response = api.modelsUsdzUpdate(contentDisposition, id, body);
        // TODO: test validations
    }
    
}
